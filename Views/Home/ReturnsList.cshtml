@using automation.mbtdistr.ru.ViewModels
@{
  ViewData["Title"] = "Возвраты";
  Layout = "/Views/Shared/_BotMenuLayout.cshtml";
}
@model List<Return>?

@if (Model?.Count > 0)
{
  @(
       Html.DevExtreme().DataGrid<Return>()
     .ID("gridContainer")
     .KeyExpr("Id")
     .ColumnAutoWidth(true)
     .ShowRowLines(true)
     .ShowBorders(true)
     .DataSource(Model)
     .ColumnChooser(cc =>
     {
       cc
       .Enabled(true)
       .Height("400px")
       .Mode(GridColumnChooserMode.Select)
       .Position(pc => pc
       .My(HorizontalAlignment.Right, VerticalAlignment.Top)
       .At(HorizontalAlignment.Right, VerticalAlignment.Bottom)
       .Of(".dx-datagrid-column-chooser-button")
       );

       cc.Search(ccs => ccs
       .Enabled(true)
       .EditorOptions(new { Placeholder = "Search column" })
       );

       cc.Selection(ccs => ccs
       .AllowSelectAll(true)
       .SelectByClick(true)
       .Recursive(true)
       );
     })


     .LoadPanel(loadPanel => loadPanel.Enabled(true))
     .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual))
     .Scrolling(scrolling => scrolling.ColumnRenderingMode(GridColumnRenderingMode.Virtual))
     .Paging(p => p.PageSize(20)).AllowColumnReordering(true)
     .AllowColumnResizing(true)
     .StateStoring(s => s.Enabled(true).Type(StateStoringType.SessionStorage).StorageKey($"{Model.GetType().Name}_grid"))
     .Sorting(sorting => sorting.Mode(GridSortingMode.Multiple))
     @* .FilterPanel(f => f.Visible(true)) *@
     .HeaderFilter(h => h.Visible(true))
     .Selection(s => s.Mode(SelectionMode.Single))
     .FilterRow(f => f.Visible(true))
     .KeyExpr("Id").HeaderFilter(hf => hf.Search(hfs => hfs.Enabled(true))))
}
else
{
  
}

